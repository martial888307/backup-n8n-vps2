{"createdAt":"2025-09-11T08:09:15.984Z","updatedAt":"2025-09-16T15:23:58.000Z","id":"1TpiX7QenurKrDM2","name":"sapitec_reanalyzecontent","active":true,"isArchived":false,"nodes":[{"parameters":{"assignments":{"assignments":[{"id":"9a185dc7-4970-4f44-bc2f-cf899a7882b6","name":"prompt","value":"={{ $json.content }}","type":"string"},{"id":"9a93b2fd-c9d9-4bf7-8f9d-0a85658a3b51","name":"prompt_system","value":"Vous êtes l'assistant d’analyse d’e-mails français de la société SAPITEC qui reçoit des emails de ses clients (Régies, Syndics en majorité) parlant d'intervention à faire dans des résidences chez des particuliers (le lésé).\n\nLes emails analysés peuvent être des emails tranférés en interne : il faut ignorer les noms, coordonnées et adresses emails des personnes semblant travailler chez SAPITEC. \n\nVotre tâche est purement extractive : ne gardez que les informations présentes explicitement dans l’e-mail.  \nIgnorez les noms, coordonnées et adresses emails des personnes travaillant chez SAPITEC.  \n\nChamps à produire :\n- Type : <suivi | demande | commande | autre> (obligatoire, jamais vide)  \n- titre : résumé court de l’email (jamais vide)\n\nurl\n - parfois une url est indique pour un complément d'information, télécharger une commande ou déposer un devis : à mettre dans url_info\n - il arrive que l'url soit fournie avec un mot de passe qui permet d'accéder au site de la régie, à renseigner dans url_password\n\n- Client : nom du client, engénral celui qui écrit l'email et donne les instructions (ou vide si non trouvé)\n\n- Contact client : en général celui qui signe l'email\n\n- Details : résumé concis en reprenant les mots originaux quand possible (ou vide)  \n\n- adresse : \n\n  • Numéro de voie + nom de voie  \n  • Ne jamais inclure le code postal ni la ville  \n- code postal : 5 chiffres si présent  \n- ville : mot(s) qui suivent immédiatement le code postal  \n\nLe lésé :\n\nParfois le nom du lésé n'est pas stipulé mais l'adresse l'est, souvent avec le nom de l'immeuble ou de la résidence dans ces cas : bien remplir les informations lésé sans stipuler le nom prénom juste.\n\n - Adresse lésé : Peut contenir “immeuble”, “résidence”, “copropriété”, “bâtiment” si présent. si tu trouves le nom associé le mettre avant l'adresse. Exemple \"Le Clos Fleuri - 29 rue Pierre Brunier\"\n - nom prénom : peut être défini comme le \"contact sur place\" ou \"le membre de la copropriété\" ou \"le locataire\" ou toute appellation qui fait penser que c'est la personne chez qui il faut intervenir, quand son nom est précisé.\n\nCatégorisation du champ Type :\n- suivi : relance, question, échange déjà en cours  \n- demande : première demande de prix (souvent via un lien ou formulaire)  \n- commande : accord explicite suite à un devis  \n- autre : paiements, communications internes, hors périmètre  \n\nRègles impératives :\n- Le champ Type est toujours obligatoire  \n- Si aucune catégorie ne correspond → écrire « autre »  \n- Si une information n’est pas clairement présente → laisser vide  \n- Ne pas écrire “N/A”, “exemple” ou une valeur fictive  \n- Ne jamais mettre “SAPITEC” comme client\n\nFormat de sortie JSON comme indiqué dans l'exemple.\n** IMPORTANT ** renseigner toutes les clés attendues, par exemple si nomPrenom du lésé est vide le mettre dans le json et mettre vide (\"\")\n\nExemples de format attendu (illustratifs uniquement) :\n\nEntrée :\n« Sauf erreur de notre part, nous n’avons pas eu de confirmation pour la demande suivante : »  \nSortie :\nType: suivi  \ntitre: Relance client affaire xxx  \n\nEntrée :\n« Peux tu reprendre rendez-vous avec… »  \nSortie :\nType: suivi  \ntitre: Suivi de RDV affaire xxx  \n\nEntrée :\n« Veuillez prendre connaissance de notre envoi via ce lien : https://formulaire-devis.example.com »  \nSortie :\nType: demande  \ntitre: Demande de devis affaire xxx  \n\nEntrée :\n« Nous confirmons notre commande pour le devis #1234. »  \nSortie :\nType: commande  \ntitre: Confirmation de commande pour le devis #1234  ","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-768,32],"id":"9eb43e6d-4e75-43a8-81ff-09946d62e735","name":"prompt"},{"parameters":{"text":"=Voici le texte e-mail à analyser et catégoriser : {{ $json.prompt }}","schemaType":"fromJson","jsonSchemaExample":"{\n  \"type\": \"suivi\",\n  \"titre\": \"Absence de devis joint\",\n  \"objet\": \"Demande de renvoi du devis réactualisé pour ESPACE EMERAUDE BAT C/D\",\n  \"url_info\": \"https://...\",\n  \"url_password\": \"2354\",\n  \"reference\": \"0197\",\n  \"client\": {\n    \"raisonSociale\": \"SOGELEM\",\n    \"nomPrenom\": \"Bryan Briard\",\n    \"adresse\": \"12, Cours Emile Zola\",\n    \"codePostal\": \"69100\",\n    \"ville\": \"Villeurbanne\",\n    \"tel\": \"04 72 98 25 21\",\n    \"email\": \"bryan.briard@sogelem.fr\"\n  },\n  \"lese\": {\n    \"nomPrenom\": \"Gaelle Jos\",\n    \"adresse\": \"Immeuble les Fleurs\\r4rue de la paix\",\n    \"codePostal\": \"75008\",\n    \"ville\": \"Paris\",\n    \"tel\": \"04 72 98 25 21\",\n    \"email\": \"gaelle.jos@sogelem.fr\"\n  }\n}","options":{"systemPromptTemplate":"={{ $json.prompt_system }}"}},"type":"@n8n/n8n-nodes-langchain.informationExtractor","typeVersion":1,"position":[-544,32],"id":"5f0031b0-0f67-4d5f-a47e-c2cbb9e58fbf","name":"catégoriser email","onError":"continueErrorOutput"},{"parameters":{"path":"50081cd4-f9b1-4287-8cb0-8cfdaf9d10e2","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-1424,128],"id":"4d53bfa2-8183-4eca-adfa-b8284533ea02","name":"Webhook","webhookId":"50081cd4-f9b1-4287-8cb0-8cfdaf9d10e2"},{"parameters":{"options":{"responseCode":200}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[0,0],"id":"417a48c2-4733-41fe-b6d3-2c4e549d8d68","name":"Respond to Webhook"},{"parameters":{"model":{"__rl":true,"value":"gpt-4.1-mini","mode":"list","cachedResultName":"gpt-4.1-mini"},"options":{"temperature":0.3}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-448,240],"id":"d4e6fde7-9269-485d-9fe2-c26d3696b9be","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"w9SlUWDfkUpRmR78","name":"OpenAi account"}}},{"parameters":{"operation":"get","tableId":"emails","filters":{"conditions":[{"keyName":"id","keyValue":"={{ $json.id_supabase }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[-976,128],"id":"28e6bf8d-a2c9-4855-96f5-b62ea09946e7","name":"Supabase","credentials":{"supabaseApi":{"id":"c6pA96O6wOcfq8wb","name":"Supabase account"}},"onError":"continueErrorOutput"},{"parameters":{"assignments":{"assignments":[{"id":"82dbc834-926d-47b8-b2d3-01961b31d84a","name":"id_supabase","value":"={{ $json.query.id }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1200,128],"id":"ddcac53e-672c-4b01-8026-dd676366ad3d","name":"Edit Fields"},{"parameters":{"options":{"responseCode":599,"responseHeaders":{"entries":[{"name":"message","value":"\"impossible de trouver l'enregistrement dans supabase\""}]}}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[-768,224],"id":"68e5cf6a-bd82-46b9-ba2e-3def4fd4ccfa","name":"Respond to Webhook1"}],"connections":{"prompt":{"main":[[{"node":"catégoriser email","type":"main","index":0}]]},"catégoriser email":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"catégoriser email","type":"ai_languageModel","index":0}]]},"Supabase":{"main":[[{"node":"prompt","type":"main","index":0}],[{"node":"Respond to Webhook1","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"Supabase","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"98e31fcc-1cbd-4663-a3ed-029e3aea4af9","triggerCount":1,"shared":[{"createdAt":"2025-09-11T08:09:15.986Z","updatedAt":"2025-09-11T08:09:15.986Z","role":"workflow:owner","workflowId":"1TpiX7QenurKrDM2","projectId":"3csiRTB7Dv0MNPzt"}],"tags":[]}