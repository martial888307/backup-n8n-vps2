{"createdAt":"2025-10-22T09:40:06.988Z","updatedAt":"2025-10-22T10:23:14.000Z","id":"nG775fRHXrX2BwFQ","name":"support_changeStatus","active":true,"isArchived":false,"nodes":[{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[-272,-160],"id":"52c07f64-5971-4065-b928-5bf8fca12d01","name":"When clicking ‚ÄòExecute workflow‚Äô"},{"parameters":{"resource":"databasePage","operation":"getAll","databaseId":{"__rl":true,"value":"d38ecf86-28d2-47de-b069-1b33e2d4229c","mode":"list","cachedResultName":"Tickets client","cachedResultUrl":"https://www.notion.so/d38ecf8628d247deb0691b33e2d4229c"},"simple":false,"filterType":"manual","matchType":"allFilters","filters":{"conditions":[{"key":"Statut|status","condition":"equals","statusValue":"R√©solu"},{"key":"is_repondu_email|checkbox","condition":"equals"}]},"options":{}},"type":"n8n-nodes-base.notion","typeVersion":2.2,"position":[-16,-160],"id":"2bddd1ec-6e13-447e-9f3a-559558bb83c8","name":"Get many database pages","credentials":{"notionApi":{"id":"q0dbCGRA3dXKCUXG","name":"Notion account"}}},{"parameters":{"fromEmail":"=support@eurekia.io","toEmail":"={{ $json.to }}","subject":"={{ $json.subject }}","emailFormat":"both","text":"={{ $json.text }}","html":"={{ $json.html }}","options":{"ccEmail":"martial@eurekia.io"}},"type":"n8n-nodes-base.emailSend","typeVersion":2.1,"position":[624,-160],"id":"7c72989a-28a7-4868-abef-3cacdc450166","name":"Send email","webhookId":"a316e446-3a62-462c-9256-7d4f9f49e7e9","credentials":{"smtp":{"id":"rp2FwQuZzPyHzlx9","name":"SMTP account"}}},{"parameters":{"jsCode":"// R√©cup√©rer tous les items d'entr√©e\nconst items = $input.all();\n\n// Dictionnaire pour regrouper par adresse email\nconst grouped = {};\n\nfor (const item of items) {\n  const data = item.json;\n  const email = data.properties?.fromEmail?.email || 'unknown';\n\n  // Extraire les champs demand√©s\n  const titre = data.properties?.Titre?.title?.[0]?.plain_text || '';\n  const description = data.properties?.Description?.rich_text?.[0]?.plain_text || '';\n  const url = data.url || '';\n  const statut = data.properties?.Statut?.status?.name || '';\n\n  if (!grouped[email]) {\n    grouped[email] = [];\n  }\n\n  grouped[email].push({\n    titre,\n    description,\n    url,\n    statut\n  });\n}\n\n// Transformer le regroupement en tableau d'items n8n\nreturn Object.keys(grouped).map(email => ({\n  json: {\n    email,\n    tickets: grouped[email]\n  }\n}));"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[192,-160],"id":"ca04abec-8832-4bf3-b9a2-2c5ea7d96c81","name":"Code"},{"parameters":{"resource":"databasePage","operation":"update","pageId":{"__rl":true,"value":"={{ $json.id }}","mode":"id"},"propertiesUi":{"propertyValues":[{"key":"is_repondu_email|checkbox","checkboxValue":true}]},"options":{}},"type":"n8n-nodes-base.notion","typeVersion":2.2,"position":[192,32],"id":"54dfdbe2-ea4c-451f-8c50-415e01d80423","name":"Update is_Repondu check","credentials":{"notionApi":{"id":"q0dbCGRA3dXKCUXG","name":"Notion account"}}},{"parameters":{"jsCode":"// Entr√©e attendue : [{ email, tickets: [{titre, description, url, statut}, ...] }, ...]\nconst groups = $input.all();\n\nfunction cleanDesc(str = '', max = 300) {\n  // retire les [cid:...] et <mailto:...> et compresse les espaces\n  let s = str\n    .replace(/\\[cid:[^\\]]+\\]/g, '')\n    .replace(/<mailto:[^>]+>/g, '')\n    .replace(/\\s{2,}/g, ' ')\n    .trim();\n  if (s.length > max) s = s.slice(0, max) + '‚Ä¶';\n  return s;\n}\n\nfunction htmlEscape(s = '') {\n  return s\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;');\n}\n\nconst items = [];\n\nfor (const g of groups) {\n  const to = g.json.email || 'unknown@example.com';\n  const tickets = Array.isArray(g.json.tickets) ? g.json.tickets : [];\n\n  // Ligne par ticket (texte)\n  const lines = tickets.map(t =>\n    [\n      `URL: ${t.url || ''}`,\n      `Statut: ${t.statut || ''}`,\n      `Titre: ${t.titre || ''}`,\n      `Description: ${cleanDesc(t.description)}`\n    ].join('\\n')\n  );\n\n  // Tableau HTML par ticket\n  const rows = tickets.map(t => {\n    const desc = htmlEscape(cleanDesc(t.description));\n    const titre = htmlEscape(t.titre || '');\n    const statut = htmlEscape(t.statut || '');\n    const url = t.url ? `<a href=\"${t.url}\">${t.url}</a>` : '';\n    return `\n      <tr>\n        <td style=\"padding:8px;vertical-align:top;\">${url}</td>\n        <td style=\"padding:8px;vertical-align:top;\">${statut}</td>\n        <td style=\"padding:8px;vertical-align:top;\">${titre}</td>\n        <td style=\"padding:8px;vertical-align:top;\">${desc}</td>\n      </tr>`;\n  }).join('');\n\n  const textBody =\n`Bonjour,\n\nLes tickets suivants ont chang√© de statut :\n\n${lines.map(l => `‚Äî\\n${l}`).join('\\n\\n')}\n\nBonne journ√©e,`;\n\n  const htmlBody =\n`<div style=\"font-family:Arial,Helvetica,sans-serif;font-size:14px;line-height:1.4;\">\n  <p>Bonjour,</p>\n  <p>Les tickets suivants ont chang√© de statut :</p>\n  <table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse:collapse;min-width:600px;\">\n    <thead>\n      <tr>\n        <th style=\"text-align:left;padding:8px;\">URL</th>\n        <th style=\"text-align:left;padding:8px;\">Statut</th>\n        <th style=\"text-align:left;padding:8px;\">Titre</th>\n        <th style=\"text-align:left;padding:8px;\">Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      ${rows}\n    </tbody>\n  </table>\n  <p style=\"margin-top:16px;\">Bonne journ√©e,</p>\n</div>`;\n\n  items.push({\n    json: {\n      to,\n      subject: `üìù ${tickets.length} ticket(s) ont chang√© de statut`,\n      text: textBody,\n      html: htmlBody,\n    }\n  });\n}\n\nreturn items;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[400,-160],"id":"817d5212-c444-44e8-a757-cdee4c9074b6","name":"Code1"},{"parameters":{"rule":{"interval":[{"field":"hours"}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[-272,16],"id":"f7a95dc3-1f0f-4f9d-80b5-2e12707b2c37","name":"Schedule Trigger"}],"connections":{"When clicking ‚ÄòExecute workflow‚Äô":{"main":[[{"node":"Get many database pages","type":"main","index":0}]]},"Get many database pages":{"main":[[{"node":"Update is_Repondu check","type":"main","index":0},{"node":"Code","type":"main","index":0}]]},"Send email":{"main":[[]]},"Code":{"main":[[{"node":"Code1","type":"main","index":0}]]},"Update is_Repondu check":{"main":[[]]},"Code1":{"main":[[{"node":"Send email","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Get many database pages","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","callerPolicy":"workflowsFromSameOwner","errorWorkflow":"4xKLB9RPfrowY9h4"},"staticData":{"node:Schedule Trigger":{"recurrenceRules":[]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"cc712cb1-938f-4980-ac56-9a9a65ea240f","triggerCount":1,"shared":[{"createdAt":"2025-10-22T09:40:06.993Z","updatedAt":"2025-10-22T09:40:06.993Z","role":"workflow:owner","workflowId":"nG775fRHXrX2BwFQ","projectId":"3csiRTB7Dv0MNPzt"}],"tags":[]}